// <auto-generated />
using System;
using JogosCatalogoApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JogosCatalogoApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241111133355_iniciandoDb")]
    partial class iniciandoDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("JogosCatalogoApi.Models.Catalogo", b =>
                {
                    b.Property<int>("CatalogoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CatalogoId"));

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CatalogoId");

                    b.ToTable("Catalogos");
                });

            modelBuilder.Entity("JogosCatalogoApi.Models.Distribuidora", b =>
                {
                    b.Property<int>("DistribuidoraId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DistribuidoraId"));

                    b.Property<int?>("CatalogoId")
                        .HasColumnType("int");

                    b.Property<string>("ImagemUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DistribuidoraId");

                    b.HasIndex("CatalogoId");

                    b.ToTable("Distribuidoras");
                });

            modelBuilder.Entity("JogosCatalogoApi.Models.Jogo", b =>
                {
                    b.Property<int>("JogoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JogoId"));

                    b.Property<int?>("CatalogoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataLancamento")
                        .HasColumnType("datetime2");

                    b.Property<int>("DistribuidoraId")
                        .HasColumnType("int");

                    b.Property<string>("Genero")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagemUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("JaAdquirido")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("JogoId");

                    b.HasIndex("CatalogoId");

                    b.HasIndex("DistribuidoraId");

                    b.ToTable("Jogos");
                });

            modelBuilder.Entity("JogosCatalogoApi.Models.Distribuidora", b =>
                {
                    b.HasOne("JogosCatalogoApi.Models.Catalogo", null)
                        .WithMany("Distribuidoras")
                        .HasForeignKey("CatalogoId");
                });

            modelBuilder.Entity("JogosCatalogoApi.Models.Jogo", b =>
                {
                    b.HasOne("JogosCatalogoApi.Models.Catalogo", null)
                        .WithMany("Jogos")
                        .HasForeignKey("CatalogoId");

                    b.HasOne("JogosCatalogoApi.Models.Distribuidora", "Distribuidora")
                        .WithMany("Jogos")
                        .HasForeignKey("DistribuidoraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Distribuidora");
                });

            modelBuilder.Entity("JogosCatalogoApi.Models.Catalogo", b =>
                {
                    b.Navigation("Distribuidoras");

                    b.Navigation("Jogos");
                });

            modelBuilder.Entity("JogosCatalogoApi.Models.Distribuidora", b =>
                {
                    b.Navigation("Jogos");
                });
#pragma warning restore 612, 618
        }
    }
}
